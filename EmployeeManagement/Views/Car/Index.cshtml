@model IEnumerable<Car>

<div class="col-sm-4">
    <a asp-action="Create">ADD A NEW ITEM</a>
</div>

<form enctype="multipart/form-data" method="post" class="mt-3">
    <div class="form-group row">
        <div class="col-sm-4">
            <input id="searchByCar" class="form-control" placeholder="Search by anything...">
        </div>
    </div>
</form>

<div id="chart_div"></div>

@section scripts{
    <script type="text/javascript" src="~/js/gstatic.charts.loader.js"></script>
    <script type="text/javascript">

        google.charts.load('current', {
            packages: ['corechart', 'bar']
        });
        google.charts.setOnLoadCallback(LoadData);

        function LoadData() {
            $.ajax({

                url: 'Car/CarManufacturer',
                dataType: "json",
                type: "GET",
                error: function (xhr, status, error) {
                    var err = eval("(" + xhr.responseText + ")");
                    toastr.error(err.message);
                },
                success: function (data) {
                    PopulationChart(data);
                    return false;
                }
            });
            return false;
        }

        //function PopulationChart(result) {
        //    var data = new google.visualization.DataTable();

        //    data.addColumn('string', 'Manufacturer');
        //    data.addColumn('number', 'Year');
        //    data.addColumn('string', 'Model');
        //    data.addColumn('string', 'Producing Country');

        //    var dataArray = [];
        //    $.each(result, function (i, obj) {
        //        dataArray.push([obj.manufacturer, parseInt(obj.year), obj.model, obj.producingCountry]);
        //    });

        //    data.addRows(dataArray);

        //    var columnChartOptions = {
        //        title: "Car manufacturer",
        //        width: "100%",
        //        height: "100%",
        //        bar: {groupWidth: "20%"}
        //    }

        //    var columnChart = new google.visualization.PieChart(document.getElementById('chart_div'));
        //    columnChart.draw(data, columnChartOptions);
        //}

        function PopulationChart(data) {
            var dataArray = [
                ['Manufacturer', 'Year', 'Model', 'Producing Country']
            ];
            $.each(data, function (i, item) {
                dataArray.push([item.manufacturer, parseInt(item.year), item.model, item.producingCountry]);
            });
            var data = google.visualization.arrayToDataTable(dataArray);
            var options = {
                title: 'Car manufacturer',
                chartArea: {
                    width: '50%',
                    height: '50%'
                },
                colors: ['#b0120a', '#7b1fa2', '#ffab91', '#d95f02'],
                hAxis: {
                    title: 'Year',
                    minValue: 0
                },
                vAxis: {
                    title: 'Years in manufacturer'
                },
                bar: { groupWidth: "20%" },
            };

            var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
            chart.draw(data, options);

            return false;
        }
    </script>
}

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProducingCountry)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Manufacturer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProducingCountry)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
